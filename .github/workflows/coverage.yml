on: [push,workflow_dispatch]
jobs:
  builds:
    runs-on: ubuntu-latest
    container:
      image: intel/oneapi-hpckit:devel-ubuntu20.04
      env:
        CC: mpiicc
        FC: mpiifort
        CFLAGS:  "-I/libs/include"
        FCFLAGS: "-I/libs/include"
        LDFLAGS: "-L/libs/lib"
 
        #LDFLAGS: "-L/spack/opt/spack/linux-ubuntu20.04-x86_64/intel-2021.5.0/libyaml-0.2.5/lib -lyaml"
    steps:
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: /libs
        key: ${{ runner.os }}-intel-libs
    - if: ${{ steps.cache.outputs.cache-hit == 'false' }}
      name: Build dependencies
      run: |
        apt update && apt install -y autoconf libtool automake zlibc zlib1g-dev
        mkdir /libs
        wget https://hdf-wordpress-1.s3.amazonaws.com/wp-content/uploads/manual/HDF5/HDF5_1_12_2/source/hdf5-1.12.2.tar.gz
        tar xf hdf5-1.12.2.tar.gz && cd hdf5-1.12.2
        autoreconf -if ./configure.ac && ./configure --prefix=/libs
        make -j install && cd ..
        wget https://github.com/Unidata/netcdf-c/archive/refs/tags/v4.8.1.tar.gz
        tar xf v4.8.1.tar.gz && cd netcdf-c-4.8.1
        autoreconf -if ./configure.ac && ./configure --prefix=/libs --enable-remote-fortran-bootstrap
        make -j install && make -j install-netcdf-fortran && cd ..
    - name: checkout
      uses: actions/checkout@v2
    - name: Configure
      run: autoreconf -if ./configure.ac && ./configure --enable-code-coverage --with-yaml
    - name: Compile
      run: make
    - name: Run coverage report
      run: make check-code-coverage
      id: report
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: /coverage-percent.txt
    # get coverage results from last successful main run for comparison
    - name: Download last results
      uses: dawidd6/action-download-artifact@v2
      continue-on-error: true
      with:
        workflow: coverage.yml
        branch: coverage-action
        workflow_conclusion: completed
    - name: Compare coverage
      run: |
        if [ -f code-coverage-report/coverage-percent.txt ]; then
          archive_val="`cat code-coverage-report/coverage-percent.txt`"
          if [ "`expr $archive_val '>' $RESULT`" -eq 1 ]; then
            echo "::warning title=Coverage Dropped:: Function coverage has decreased between runs from $archive_val to $RESULT"
          fi
        else
          echo "::warning title=Coverage Not Checked:: Archived results could not be downloaded"
        fi
      env:
        RESULT: ${{ steps.report.outputs.percentage }}
